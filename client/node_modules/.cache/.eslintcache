[{"C:\\Users\\good\\Desktop\\board\\client\\src\\index.js":"1","C:\\Users\\good\\Desktop\\board\\client\\src\\App.js":"2","C:\\Users\\good\\Desktop\\board\\client\\src\\reportWebVitals.js":"3","C:\\Users\\good\\Desktop\\board\\client\\src\\Board.js":"4","C:\\Users\\good\\Desktop\\board\\client\\src\\AddBoard.js":"5","C:\\Users\\good\\Desktop\\board\\client\\src\\Detail.js":"6","C:\\Users\\good\\Desktop\\board\\client\\src\\FileInput.js":"7","C:\\Users\\good\\Desktop\\board\\client\\src\\UpdateBoard.js":"8","C:\\Users\\good\\Desktop\\board\\client\\src\\CreateTitle.js":"9","C:\\Users\\good\\Desktop\\board\\client\\src\\UpdateTitle.js":"10","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\index.js":"11","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\App.js":"12","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\reportWebVitals.js":"13","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\Board.js":"14","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\Detail.js":"15","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\UpdateBoard.js":"16","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\AddBoard.js":"17","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\CreateTitle.js":"18","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\UpdateTitle.js":"19","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\FileInput.js":"20","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\Pagination.js":"21"},{"size":535,"mtime":1652747870646,"results":"22","hashOfConfig":"23"},{"size":3520,"mtime":1654238324246,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1652747870733,"results":"25","hashOfConfig":"23"},{"size":2109,"mtime":1654220229768,"results":"26","hashOfConfig":"23"},{"size":1203,"mtime":1654220641892,"results":"27","hashOfConfig":"23"},{"size":1655,"mtime":1654161067732,"results":"28","hashOfConfig":"23"},{"size":1572,"mtime":1654157754139,"results":"29","hashOfConfig":"23"},{"size":2846,"mtime":1654235509376,"results":"30","hashOfConfig":"23"},{"size":121,"mtime":1654159721697,"results":"31","hashOfConfig":"23"},{"size":121,"mtime":1654159779752,"results":"32","hashOfConfig":"23"},{"size":552,"mtime":1654563768654,"results":"33","hashOfConfig":"34"},{"size":3702,"mtime":1654568445697,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1654563768661,"results":"36","hashOfConfig":"34"},{"size":2810,"mtime":1654571742047,"results":"37","hashOfConfig":"34"},{"size":1655,"mtime":1654563768649,"results":"38","hashOfConfig":"34"},{"size":2803,"mtime":1654569146882,"results":"39","hashOfConfig":"34"},{"size":1203,"mtime":1654563768635,"results":"40","hashOfConfig":"34"},{"size":121,"mtime":1654563768644,"results":"41","hashOfConfig":"34"},{"size":121,"mtime":1654563768653,"results":"42","hashOfConfig":"34"},{"size":1572,"mtime":1654563768651,"results":"43","hashOfConfig":"34"},{"size":828,"mtime":1654571272790,"results":"44","hashOfConfig":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"h69w5j",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"1j6k6l5",{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\good\\Desktop\\board\\client\\src\\index.js",[],[],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\App.js",["116","117"],[],"import React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport Board from './Board';\nimport Detail from './Detail';\nimport UpdateBoard from './UpdateBoard';\n\n\nfunction App() {\n  const [info, setInfo] = useState([]);\n  const [index, setIndex] = useState(1);\n  const [selected, setSelected] = useState('');\n  const [inputs, setInputs] = useState({\n    board_idx: 0,\n    title:'',\n    username: '',\n    content:'',\n  });\n  \n  const handleSave = (data) => {\n    console.log(data)\n    if(data.board_idx){ //수정 데이터에는 id가 존재\n      setInfo(\n        info.map(row => data.board_idx == row.board_idx ? {\n          board_idx: data.board_idx,\n          title:data.title,\n          username: data.username,\n          content:data.content,\n        } : row)\n      )\n    }else{\n      setIndex(index+1);\n      setInfo((prev) => {\n        return [...prev, {\n          board_idx: index,\n          title: data.title,\n          username: data.username,\n          content:data.content,\n          imgFile: data.imgFile       \n        }\n      ]})\n    }\n  }\n\n  const nextId = useRef(1);\n  \n  const handleEdit = (item) => {\n    const selectedData = {\n      board_idx: item.board_idx,\n      title: item.title,\n      username: item.username,\n      content:item.content,\n      imgFile: item.imgFile  \n    }\n    console.log(selectedData)\n    setSelected(selectedData)\n  }\n\n  //수정된 데이터를 item으로 받아 기존 데이터 추가하기의 handleSave함수를 이용해 조건부 렌더링\n  const handleEditSubmit = (item) => {\n    console.log(item);\n    handleSave(item)\n    const params = new URLSearchParams(); \n   params.append('data', 'data!!')\n    axios.post('/api/update')\n    .then((res) => {\n\n      console.log(res)\n    })\n    .catch((err) => {\n      console.log(\"onSubmitEdit-err \"+err)   \n    })\n    // setInputs({\n    //   board_idx: 0,\n    //   title: '',\n    //   username: '',\n    //   content: '',\n    // })\n  }\n\n  const handleDelete = (id) => {\n    //console.log(id)\n    setInfo(info => info.filter(el => el.board_idx !== id));\n    //console.log(info)\n\n  }\n\n  const handleChange = (name, value) => {\n    setInputs((prevValues) => ({\n      ...prevValues,\n      [name]: value,\n    }));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    handleChange(name, value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    handleSave(inputs);\n  \n    axios.post('/api/board', inputs)\n    .then((res) => {\n      //console.log(res)\n    })\n    .catch((err) => {\n      console.log(\"client-err\"+err)   \n    })\n    setInputs({\n      board_idx: 0,\n      title: '',\n      username: '',\n      content: '',\n    })\n    \n    e.target.reset();\n  }\n  \n \n\n  useEffect(() => {\n    axios.get('/api/board')\n      .then(res => setInfo(res.data))\n      .catch(err => console.log(err))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<Board info={info} inputs={inputs} handleDelete={handleDelete} handleInputChange={handleInputChange} handleSubmit={handleSubmit}/>} />\n        <Route exact path=\"/detail/:id\" element={<Detail info={info} />} />\n        <Route exact path=\"/update/:id\" element={<UpdateBoard info={info} selected={selected} handleEdit={handleEdit} handleEditSubmit={handleEditSubmit}/>} />\n      </Routes>      \n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\good\\Desktop\\board\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\Board.js",["118"],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\AddBoard.js",["119","120","121"],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\Detail.js",["122"],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\FileInput.js",[],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\UpdateBoard.js",["123","124","125","126"],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\CreateTitle.js",[],[],"C:\\Users\\good\\Desktop\\board\\client\\src\\UpdateTitle.js",[],[],[],"C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\index.js",[],[],[],"C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\App.js",["127","128"],[],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport Board from './Board';\r\nimport Detail from './Detail';\r\nimport UpdateBoard from './UpdateBoard';\r\n\r\n\r\nfunction App() {\r\n  const [info, setInfo] = useState([]);\r\n  const [index, setIndex] = useState(1);\r\n  const [selected, setSelected] = useState('');\r\n  const [inputs, setInputs] = useState({\r\n    board_idx: 0,\r\n    title:'',\r\n    username: '',\r\n    content:'',\r\n  });\r\n  \r\n  const handleSave = (data) => {\r\n    console.log(data)\r\n    if(data.board_idx){ //수정 데이터에는 id가 존재\r\n      setInfo(\r\n        info.map(row => data.board_idx == row.board_idx ? {\r\n          board_idx: data.board_idx,\r\n          title:data.title,\r\n          username: data.username,\r\n          content:data.content,\r\n        } : row)\r\n      )\r\n    }else{\r\n      setIndex(index+1);\r\n      setInfo((prev) => {\r\n        return [...prev, {\r\n          board_idx: index,\r\n          title: data.title,\r\n          username: data.username,\r\n          content:data.content,\r\n          imgFile: data.imgFile       \r\n        }\r\n      ]})\r\n    }\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  const handleEdit = (item) => {\r\n    const selectedData = {\r\n      board_idx: item.board_idx,\r\n      title: item.title,\r\n      username: item.username,\r\n      content:item.content,\r\n      imgFile: item.imgFile  \r\n    }\r\n    console.log(selectedData)\r\n    setSelected(selectedData)\r\n  }\r\n\r\n  //수정된 데이터를 item으로 받아 기존 데이터 추가하기의 handleSave함수를 이용해 조건부 렌더링\r\n  const handleEditSubmit = (item) => {\r\n    console.log(item);\r\n    handleSave(item)\r\n    const params = new URLSearchParams(); \r\n   params.append('data', 'data!!')\r\n    // axios.post('/api/update')\r\n    // .then((res) => {\r\n\r\n    //   console.log(res)\r\n    // })\r\n    // .catch((err) => {\r\n    //   console.log(\"onSubmitEdit-err \"+err)   \r\n    // })\r\n    // // setInputs({\r\n    // //   board_idx: 0,\r\n    // //   title: '',\r\n    // //   username: '',\r\n    // //   content: '',\r\n    // // })\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    //console.log(id)\r\n    setInfo(info => info.filter(el => el.board_idx !== id));\r\n    //console.log(info)\r\n\r\n  }\r\n\r\n  const handleChange = (name, value) => {\r\n    setInputs((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    handleChange(name, value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    handleSave(inputs);\r\n  \r\n    axios.post('/api/post', inputs)\r\n    .then((res) => {\r\n      //console.log(res)\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"client-err\"+err)   \r\n    })\r\n    setInputs({\r\n      board_idx: 0,\r\n      title: '',\r\n      username: '',\r\n      content: '',\r\n    })\r\n    \r\n    e.target.reset();\r\n  }\r\n  \r\n \r\n\r\n  useEffect(() => {\r\n    axios.get('/api/board')\r\n      .then(res => setInfo(res.data))\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Board info={info} inputs={inputs} handleDelete={handleDelete} handleInputChange={handleInputChange} handleSubmit={handleSubmit}/>} />\r\n        <Route exact path=\"/detail/:id\" element={<Detail info={info} />} />\r\n        <Route exact path=\"/update/:id\" element={<UpdateBoard info={info} selected={selected} handleEdit={handleEdit} handleEditSubmit={handleEditSubmit}/>} />\r\n      </Routes>      \r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\Board.js",[],[],"C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\Detail.js",["129"],[],"import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Detail.css';\r\nimport moment from 'moment';\r\n\r\nfunction Detail({info}) {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n\r\n  const [dummyData] = info.filter((el) => el.board_idx == id)\r\n  //console.log(dummyData) \r\n\r\n  return (<>\r\n   <h2 align=\"center\">게시글 상세정보</h2>\r\n  \r\n  <div className=\"post-view-wrapper\">\r\n      {\r\n        info ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{ dummyData.board_idx }</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>제목</label>\r\n              <label>{ dummyData.title }</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자</label>\r\n              <label>{ dummyData.username }</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성일</label>\r\n              <label>{ moment(dummyData.reg_date).format('YYYY.MM.DD HH:mm:ss') }</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>내용</label>\r\n              <div>\r\n                {\r\n                  dummyData.content\r\n                }\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : '해당 게시글을 찾을 수 없습니다.'\r\n      }\r\n    </div>\r\n      <button className=\"post-view-go-list-btn\" onClick={() => navigate(-1)}>목록으로 돌아가기</button>\r\n  </>);\r\n}\r\n\r\n\r\nexport default Detail;","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\UpdateBoard.js",["130","131"],[],"import React, { useState } from 'react';\r\nimport AddBoard from './AddBoard';\r\nimport UpdateTitle from './UpdateTitle';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FileInput from './FileInput';\r\n\r\nconst UpdateBoard = ({info, selected, handleEdit, handleEditSubmit}) => {\r\n  const { id } = useParams();\r\n  const [dummyData] = info.filter((el) => el.board_idx == id)\r\n  const navigate = useNavigate();\r\n  //console.log(dummyData) \r\n  const [edited, setEdited] = useState(selected);\r\n  \r\n  const [inputs, setInputs] = useState({\r\n    board_idx: dummyData.board_idx,\r\n    title:dummyData.title,\r\n    username: dummyData.username,\r\n    content:dummyData.content,\r\n  });\r\n\r\n  //해당 user의 데이터를 가져오기 위한 함수\r\n  const onEdit = () => {\r\n    handleEdit(dummyData)\r\n  }\r\n  \r\n  //게시글이 수정된 값을 가져오기 위한 함수\r\n  const onEditChange = (e) => {\r\n\r\n    setEdited({\r\n      ...edited,\r\n      board_idx: dummyData.board_idx,\r\n      username: dummyData.username,\r\n      [e.target.name]: e.target.value,  \r\n    })\r\n  }\r\n\r\n  //수정된 데이터를 handleEditSubmit 함수에 넣어서 실행\r\n const onSubmitEdit = (e) => {\r\n   e.preventDefault();\r\n   handleEditSubmit(edited);\r\n  //  const params = new URLSearchParams(); \r\n  //  params.append('data', 'data!!')\r\n   axios.put('/api/update', edited)\r\n    .then((res) => {\r\n\r\n      console.log(res)\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"onSubmitEdit-err \"+err)   \r\n    })\r\n    setInputs({\r\n      board_idx: 0,\r\n      title: '',\r\n      username: '',\r\n      content: '',\r\n    })\r\n }\r\n\r\n  return (\r\n    <>\r\n    <UpdateTitle />\r\n    <div className='form_box'>\r\n        <form onSubmit={onSubmitEdit}>\r\n          <FileInput  name=\"imgFile\" value={inputs.imgFile} />\r\n          <label>\r\n            <input type=\"text\" className=\"title_input\" placeholder='제목을 입력해주세요' onChange={onEditChange} name='title' defaultValue={inputs.title} ></input>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input type=\"text\" className=\"name_input\" placeholder='이름을 입력해주세요' onChange={onEditChange} name='username' defaultValue={inputs.username} ></input>\r\n          </label>\r\n          <label>\r\n            <textarea className='content_input' placeholder='내용을 입력해주세요' onChange={onEditChange} name='content' defaultValue={inputs.content} ></textarea>\r\n          </label>\r\n          <br />\r\n          <button className=\"write_button\" onClick={onEdit}>수정하기</button>\r\n        </form>\r\n    </div>\r\n    \r\n      <button className=\"post-view-go-list-btn\" onClick={() => navigate(-1)}>목록으로 돌아가기</button>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default UpdateBoard;\r\n\r\n","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\AddBoard.js",["132","133","134"],[],"import React, { useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AddBoard.css';\r\nimport FileInput from './FileInput';\r\n\r\n\r\nconst AddBoard = ({inputs,handleInputChange, handleSubmit}) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='form_box'>\r\n        <form onSubmit={handleSubmit}>\r\n          <FileInput  name=\"imgFile\" value={inputs.imgFile} />\r\n          <label>\r\n            <input type=\"text\" className=\"title_input\" placeholder='제목을 입력해주세요' onChange={handleInputChange} name='title' defaultValue={inputs.title} ></input>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input type=\"text\" className=\"name_input\" placeholder='이름을 입력해주세요' onChange={handleInputChange} name='username' defaultValue={inputs.username} ></input>\r\n          </label>\r\n          <label>\r\n            <textarea className='content_input' placeholder='내용을 입력해주세요' onChange={handleInputChange} name='content' defaultValue={inputs.content} ></textarea>\r\n          </label>\r\n          <br />\r\n          <button className=\"write_button\">게시</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddBoard;","C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\CreateTitle.js",[],[],"C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\UpdateTitle.js",[],[],"C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\FileInput.js",[],[],"C:\\Users\\good\\Desktop\\20220607\\Board\\client\\src\\Pagination.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":25,"column":40,"nodeType":"137","messageId":"138","endLine":25,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":46,"column":9,"nodeType":"141","messageId":"142","endLine":46,"endColumn":15},{"ruleId":"139","severity":1,"message":"143","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":18},{"ruleId":"139","severity":1,"message":"144","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"143","line":1,"column":25,"nodeType":"141","messageId":"142","endLine":1,"endColumn":33},{"ruleId":"139","severity":1,"message":"145","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":12,"column":56,"nodeType":"137","messageId":"138","endLine":12,"endColumn":58},{"ruleId":"139","severity":1,"message":"146","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":11,"column":56,"nodeType":"137","messageId":"138","endLine":11,"endColumn":58},{"ruleId":"139","severity":1,"message":"147","line":16,"column":18,"nodeType":"141","messageId":"142","endLine":16,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":25,"column":40,"nodeType":"137","messageId":"138","endLine":25,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":46,"column":9,"nodeType":"141","messageId":"142","endLine":46,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":12,"column":56,"nodeType":"137","messageId":"138","endLine":12,"endColumn":58},{"ruleId":"139","severity":1,"message":"146","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":11,"column":56,"nodeType":"137","messageId":"138","endLine":11,"endColumn":58},{"ruleId":"139","severity":1,"message":"144","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"143","line":1,"column":25,"nodeType":"141","messageId":"142","endLine":1,"endColumn":33},{"ruleId":"139","severity":1,"message":"145","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":13},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'nextId' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'axios' is defined but never used.","'AddBoard' is defined but never used.","'setInputs' is assigned a value but never used."]